<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20242.24.0711.1636                               -->
<workbook original-version='18.1' source-build='2024.2.1 (20242.24.0711.1636)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='aligned_model_predictions' inline='true' name='federated.06dnfh20ckb8cd1afvlt71j8yc59' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='aligned_model_predictions' name='textscan.0jwcz0d00olasb1avsfrk0gw11lf'>
            <connection class='textscan' directory='C:/Users/PASAM/Downloads' filename='aligned_model_predictions.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0jwcz0d00olasb1avsfrk0gw11lf' name='aligned_model_predictions.csv' table='[aligned_model_predictions#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='real' name='population' ordinal='0' />
            <column datatype='real' name='gdp' ordinal='1' />
            <column datatype='real' name='energy_per_capita' ordinal='2' />
            <column datatype='real' name='actual_co2' ordinal='3' />
            <column datatype='real' name='predicted_co2' ordinal='4' />
            <column datatype='string' name='country' ordinal='5' />
            <column datatype='integer' name='year' ordinal='6' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.0jwcz0d00olasb1avsfrk0gw11lf' name='aligned_model_predictions.csv' table='[aligned_model_predictions#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='real' name='population' ordinal='0' />
            <column datatype='real' name='gdp' ordinal='1' />
            <column datatype='real' name='energy_per_capita' ordinal='2' />
            <column datatype='real' name='actual_co2' ordinal='3' />
            <column datatype='real' name='predicted_co2' ordinal='4' />
            <column datatype='string' name='country' ordinal='5' />
            <column datatype='integer' name='year' ordinal='6' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[aligned_model_predictions.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;â‚¹&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>5</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[aligned_model_predictions.csv]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>0</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[aligned_model_predictions.csv_0471D76C14254CE0BA3087792DC80EA3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gdp</remote-name>
            <remote-type>5</remote-type>
            <local-name>[gdp]</local-name>
            <parent-name>[aligned_model_predictions.csv]</parent-name>
            <remote-alias>gdp</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[aligned_model_predictions.csv_0471D76C14254CE0BA3087792DC80EA3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>energy_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[energy_per_capita]</local-name>
            <parent-name>[aligned_model_predictions.csv]</parent-name>
            <remote-alias>energy_per_capita</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[aligned_model_predictions.csv_0471D76C14254CE0BA3087792DC80EA3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>actual_co2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[actual_co2]</local-name>
            <parent-name>[aligned_model_predictions.csv]</parent-name>
            <remote-alias>actual_co2</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[aligned_model_predictions.csv_0471D76C14254CE0BA3087792DC80EA3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>predicted_co2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[predicted_co2]</local-name>
            <parent-name>[aligned_model_predictions.csv]</parent-name>
            <remote-alias>predicted_co2</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[aligned_model_predictions.csv_0471D76C14254CE0BA3087792DC80EA3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country]</local-name>
            <parent-name>[aligned_model_predictions.csv]</parent-name>
            <remote-alias>country</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[aligned_model_predictions.csv_0471D76C14254CE0BA3087792DC80EA3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[aligned_model_predictions.csv]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[aligned_model_predictions.csv_0471D76C14254CE0BA3087792DC80EA3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Error' datatype='real' name='[Calculation_1016124700909764608]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='ABS([actual_co2] - [predicted_co2])' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='aligned_model_predictions.csv' datatype='table' name='[__tableau_internal_object_id__].[aligned_model_predictions.csv_0471D76C14254CE0BA3087792DC80EA3]' role='measure' type='quantitative' />
      <column caption='Actual Co2' datatype='real' name='[actual_co2]' role='measure' type='quantitative' />
      <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Energy Per Capita' datatype='real' name='[energy_per_capita]' role='measure' type='quantitative' />
      <column caption='Gdp' datatype='real' name='[gdp]' role='measure' type='quantitative' />
      <column caption='Population' datatype='real' name='[population]' role='measure' type='quantitative' />
      <column caption='Predicted Co2' datatype='real' name='[predicted_co2]' role='measure' type='quantitative' />
      <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
      <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/PASAM/AppData/Local/Temp/TableauTemp/#TableauTemp_0m6xx4916ded561351tp81ejzde7.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='01/11/2025 08:26:31 AM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>population</remote-name>
              <remote-type>5</remote-type>
              <local-name>[population]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>population</remote-alias>
              <ordinal>0</ordinal>
              <family>aligned_model_predictions.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1537</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[aligned_model_predictions.csv_0471D76C14254CE0BA3087792DC80EA3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>gdp</remote-name>
              <remote-type>5</remote-type>
              <local-name>[gdp]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>gdp</remote-alias>
              <ordinal>1</ordinal>
              <family>aligned_model_predictions.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1537</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[aligned_model_predictions.csv_0471D76C14254CE0BA3087792DC80EA3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>energy_per_capita</remote-name>
              <remote-type>5</remote-type>
              <local-name>[energy_per_capita]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>energy_per_capita</remote-alias>
              <ordinal>2</ordinal>
              <family>aligned_model_predictions.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1537</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[aligned_model_predictions.csv_0471D76C14254CE0BA3087792DC80EA3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>actual_co2</remote-name>
              <remote-type>5</remote-type>
              <local-name>[actual_co2]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>actual_co2</remote-alias>
              <ordinal>3</ordinal>
              <family>aligned_model_predictions.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1288</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[aligned_model_predictions.csv_0471D76C14254CE0BA3087792DC80EA3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>predicted_co2</remote-name>
              <remote-type>5</remote-type>
              <local-name>[predicted_co2]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>predicted_co2</remote-alias>
              <ordinal>4</ordinal>
              <family>aligned_model_predictions.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1537</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[aligned_model_predictions.csv_0471D76C14254CE0BA3087792DC80EA3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[country]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>country</remote-alias>
              <ordinal>5</ordinal>
              <family>aligned_model_predictions.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>165</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[aligned_model_predictions.csv_0471D76C14254CE0BA3087792DC80EA3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>year</remote-name>
              <remote-type>20</remote-type>
              <local-name>[year]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>year</remote-alias>
              <ordinal>6</ordinal>
              <family>aligned_model_predictions.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>58</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[aligned_model_predictions.csv_0471D76C14254CE0BA3087792DC80EA3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:country:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;North Korea&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='aligned_model_predictions.csv' id='aligned_model_predictions.csv_0471D76C14254CE0BA3087792DC80EA3'>
            <properties context=''>
              <relation connection='textscan.0jwcz0d00olasb1avsfrk0gw11lf' name='aligned_model_predictions.csv' table='[aligned_model_predictions#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='real' name='population' ordinal='0' />
                  <column datatype='real' name='gdp' ordinal='1' />
                  <column datatype='real' name='energy_per_capita' ordinal='2' />
                  <column datatype='real' name='actual_co2' ordinal='3' />
                  <column datatype='real' name='predicted_co2' ordinal='4' />
                  <column datatype='string' name='country' ordinal='5' />
                  <column datatype='integer' name='year' ordinal='6' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='&quot;Energy Usage vs. GDP Error by Country&quot;'>
      <table>
        <view>
          <datasources>
            <datasource caption='aligned_model_predictions' name='federated.06dnfh20ckb8cd1afvlt71j8yc59' />
          </datasources>
          <datasource-dependencies datasource='federated.06dnfh20ckb8cd1afvlt71j8yc59'>
            <column caption='Error' datatype='real' name='[Calculation_1016124700909764608]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='ABS([actual_co2] - [predicted_co2])' />
            </column>
            <column caption='Actual Co2' datatype='real' name='[actual_co2]' role='measure' type='quantitative' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Energy Per Capita' datatype='real' name='[energy_per_capita]' role='measure' type='quantitative' />
            <column caption='Gdp' datatype='real' name='[gdp]' role='measure' type='quantitative' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[energy_per_capita]' derivation='None' name='[none:energy_per_capita:qk]' pivot='key' type='quantitative' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column caption='Predicted Co2' datatype='real' name='[predicted_co2]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1016124700909764608]' derivation='Sum' name='[sum:Calculation_1016124700909764608:qk]' pivot='key' type='quantitative' />
            <column-instance column='[gdp]' derivation='Sum' name='[sum:gdp:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <computed-sort column='[federated.06dnfh20ckb8cd1afvlt71j8yc59].[none:country:nk]' direction='DESC' using='[federated.06dnfh20ckb8cd1afvlt71j8yc59].[sum:Calculation_1016124700909764608:qk]' />
          <filter class='quantitative' column='[federated.06dnfh20ckb8cd1afvlt71j8yc59].[none:energy_per_capita:qk]' included-values='in-range'>
            <min>-0.74702463490518756</min>
            <max>8.6306401955641086</max>
          </filter>
          <filter class='quantitative' column='[federated.06dnfh20ckb8cd1afvlt71j8yc59].[none:year:qk]' included-values='in-range'>
            <min>1990</min>
            <max>2020</max>
          </filter>
          <slices>
            <column>[federated.06dnfh20ckb8cd1afvlt71j8yc59].[none:year:qk]</column>
            <column>[federated.06dnfh20ckb8cd1afvlt71j8yc59].[none:energy_per_capita:qk]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.06dnfh20ckb8cd1afvlt71j8yc59].[none:country:nk]' />
              <tooltip column='[federated.06dnfh20ckb8cd1afvlt71j8yc59].[sum:gdp:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.06dnfh20ckb8cd1afvlt71j8yc59].[none:country:nk]</rows>
        <cols>[federated.06dnfh20ckb8cd1afvlt71j8yc59].[sum:Calculation_1016124700909764608:qk]</cols>
      </table>
      <simple-id uuid='{CBF45322-8CC7-47DC-80CB-FD0999C1BF2C}' />
    </worksheet>
    <worksheet name='&quot;Relationship Between GDP and Actual CO2 Emissions&quot;'>
      <table>
        <view>
          <datasources>
            <datasource caption='aligned_model_predictions' name='federated.06dnfh20ckb8cd1afvlt71j8yc59' />
          </datasources>
          <datasource-dependencies datasource='federated.06dnfh20ckb8cd1afvlt71j8yc59'>
            <column caption='Actual Co2' datatype='real' name='[actual_co2]' role='measure' type='quantitative' />
            <column-instance column='[country]' derivation='Attribute' name='[attr:country:nk]' pivot='key' type='nominal' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Gdp' datatype='real' name='[gdp]' role='measure' type='quantitative' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column caption='Population' datatype='real' name='[population]' role='measure' type='quantitative' />
            <column-instance column='[actual_co2]' derivation='Sum' name='[sum:actual_co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[gdp]' derivation='Sum' name='[sum:gdp:qk]' pivot='key' type='quantitative' />
            <column-instance column='[population]' derivation='Sum' name='[sum:population:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.06dnfh20ckb8cd1afvlt71j8yc59].[sum:population:qk]' />
              <lod column='[federated.06dnfh20ckb8cd1afvlt71j8yc59].[attr:country:nk]' />
              <lod column='[federated.06dnfh20ckb8cd1afvlt71j8yc59].[none:year:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.06dnfh20ckb8cd1afvlt71j8yc59].[sum:actual_co2:qk]</rows>
        <cols>[federated.06dnfh20ckb8cd1afvlt71j8yc59].[sum:gdp:qk]</cols>
      </table>
      <simple-id uuid='{1992D4B0-96E4-4217-8DC4-FCE7B3D2FD0B}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <table>
        <view>
          <datasources />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{828CD399-7E9F-431A-9CFE-A77B996D6211}' />
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' name='&quot;Relationship Between GDP and Actual CO2 Emissions&quot;'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.06dnfh20ckb8cd1afvlt71j8yc59].[sum:population:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.06dnfh20ckb8cd1afvlt71j8yc59].[none:country:nk]</field>
            <field>[federated.06dnfh20ckb8cd1afvlt71j8yc59].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E6021991-339A-4DA5-9E03-2780CBBA0592}' />
    </window>
    <window class='worksheet' maximized='true' name='&quot;Energy Usage vs. GDP Error by Country&quot;'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.06dnfh20ckb8cd1afvlt71j8yc59].[none:country:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.06dnfh20ckb8cd1afvlt71j8yc59].[none:country:nk]</field>
            <field>[federated.06dnfh20ckb8cd1afvlt71j8yc59].[none:energy_per_capita:qk]</field>
            <field>[federated.06dnfh20ckb8cd1afvlt71j8yc59].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{916ABEC2-7C6F-49CF-A83F-6A8F00F0ABBA}' />
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{00E99980-E08B-4023-8611-BE6D1211968B}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='&quot;Energy Usage vs. GDP Error by Country&quot;' width='192'>
      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
      ocRYTTDxe0IAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='&quot;Relationship Between GDP and Actual CO2 Emissions&quot;' width='192'>
      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
      b2u0DFfmLaUAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAACFUlEQVR4nO3TMQEAIAzAMMC/5yFjRxMFfXpnZg5Eve0A2GQA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQD
      kGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBp
      BiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA
      0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDN
      AKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxA
      mgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKR9Y+0F
      fBUOM1sAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
